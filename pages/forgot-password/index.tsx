import React from 'react'
import Image from 'next/image'
import Head from 'next/head' 
import Footer from '../../components/Footer'
import Navbar from '../../components/Navbar'
import { useResendPasswordOtpCallback, useResetPasswordOtpCallback } from '../../action/useAuth'
import { useToast } from '@chakra-ui/react'
import Router from 'next/router'
import { FaLeaf } from 'react-icons/fa'

export default function Index() {

  const { handleResendPasswordOtp } = useResendPasswordOtpCallback()
  const [loading, setLoading] = React.useState(false)
  const { handleResetPasswordOtp } = useResetPasswordOtpCallback()
  
  const [otp, setOtp] = React.useState("")
  const [email, setEmail] = React.useState("")
  const [password, setPassword] = React.useState("")
  const [tab, setTab] = React.useState(false)
  const toast = useToast()

  const submitOtp = async () => {
    setLoading(true)
    if (!otp) { 
        toast({
            title: "Enter Your Otp",
            position: "bottom",
            status: "error",
            isClosable: true,
        }) 
        return;
        setLoading(false);
    }else  if (!password) { 
      toast({
          title: "Enter Your New Password",
          position: "bottom",
          status: "error",
          isClosable: true,
      }) 
      return;
      setLoading(false);
    } else {
        setLoading(true);
        const request = await handleResetPasswordOtp(JSON.stringify({
          email: email, 
          reset_code: otp,
          new_password: password
        }))   
        if (request?.status === 200 || request?.status === 201) { 
            // localStorage.setItem("token", request?.data?.data?.token)   
            // localStorage.setItem("id", request?.data?.data?.user?._id)  
            toast({
                title: "Verification Successful",
                position: "bottom",
                status: "success",
                isClosable: true,
            })
            const t1 = setTimeout(() => {
                setLoading(false);  
                Router.push("/login")
                clearTimeout(t1);
            }, 1000);  
        }else {  
            toast({
                title: request?.data[0],
                position: "bottom",
                status: "error",
                isClosable: true,
            }) 
            setLoading(false)  
        }
    }
    setLoading(false);
  }  

  const ResendOtp =async()=>{

    setLoading(true)

    if(!email){
      toast({
        title: "Enter Email",
        position: "bottom",
        status: "error",
        isClosable: true,
      })
      setLoading(false)
      return
    } else {

      const request = await handleResendPasswordOtp(JSON.stringify({ 
        email: email, 
      }))  
      if (request?.status === 200 || request?.status === 201) {  
        toast({
            title: "Otp Sent",
            position: "bottom",
            status: "success",
            isClosable: true,
        })
        const t1 = setTimeout(() => {
            setLoading(false);  
            setTab(true)
            // Router.push("/dashboard")
            clearTimeout(t1);
        }, 1000);  
      }else {  
          toast({
              title: request?.data[0],
              position: "bottom",
              status: "error",
              isClosable: true,
          }) 
      }
    }
    setLoading(false)  
  }


  return (
    <div className=' w-full h-screen lg:h-full bg-[#070A0D] overflow-y-auto '>
      <Head>
        <title>Forgot Password</title>
        <meta name="description" content="Generated by create next app" /> 
      </Head> 
        <Navbar btn="Log In" />
          <div className=' w-full py-4 px-6 ' >
            <div className=' w-full flex flex-col justify-center items-center my-3 ' >
          <Image width="300px" height="300px" src="/Landing-page-logo.png" alt='Landing' /> 
          {!tab && ( 
            <div className=' lg:w-[486px] font-Poppins-Regular text-white mt-10 ' > 
              <input onChange={(e)=> setEmail(e.target?.value)} placeholder='Username, email or phone number' className='  w-full h-12 rounded-[6px] px-6 bg-[#171F26] ' /> 
              <button onClick={()=> ResendOtp()} className=' bg-[#00D1FF] h-[40px] text-[#0F1419] w-full font-Poppins-Bold rounded-[6px] mt-6 ' >{loading ? "Loading...": "Send Otp"}</button> 
            </div>
          )}
          {tab && ( 
            <div className=' lg:w-[486px] font-Poppins-Regular text-white mt-10 ' > 
              <input onChange={(e)=> setOtp(e.target?.value)} placeholder='Enter Otp' className='  w-full h-12 rounded-[6px] px-6 bg-[#171F26] ' /> 
              <input onChange={(e)=> setPassword(e.target?.value)} type='password' placeholder='Eneter Password' className='  w-full h-12 rounded-[6px] mt-4 px-6 bg-[#171F26] ' /> 
              <button  onClick={()=> submitOtp()} className=' bg-[#00D1FF] h-[40px] text-[#0F1419] w-full font-Poppins-Bold rounded-[6px] mt-6 ' >{loading ? "Loading...": "Change Password"}</button> 
            </div>
          )}
        </div>
      </div>
      <div className='lg:flex xl:flex hidden mt-10 ' > 
        <Footer />
      </div>
    </div>
  )
} 